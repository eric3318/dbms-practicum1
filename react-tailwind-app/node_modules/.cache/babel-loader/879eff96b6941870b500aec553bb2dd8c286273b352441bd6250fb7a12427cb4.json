{"ast":null,"code":"export const getAveragePlayTimePerPlayer = async () => {\n  const res = await fetch('http://localhost/dbms-practicum1/api/analytics/playtime.php?type=average');\n  const text = await res.text();\n  console.log(\"Average Playtime Raw:\", text);\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    throw new Error(\"Invalid JSON from average playtime\");\n  }\n};\nexport const getWeeklyPlayTimeByPlayer = async (startDate = '') => {\n  const url = new URL('http://localhost/dbms-practicum1/api/analytics/playtime.php');\n  url.searchParams.append('type', 'total');\n  if (startDate) {\n    url.searchParams.append('start', startDate);\n  }\n  const res = await fetch(url.toString());\n  const text = await res.text();\n  console.log(\"Weekly Playtime Raw:\", text);\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    throw new Error(\"Invalid JSON from weekly playtime\");\n  }\n};","map":{"version":3,"names":["getAveragePlayTimePerPlayer","res","fetch","text","console","log","JSON","parse","err","Error","getWeeklyPlayTimeByPlayer","startDate","url","URL","searchParams","append","toString"],"sources":["/Users/ziyixu/LocalDocuments/CS5200/Practicum1/react-tailwind-app/src/services/playtimeService.js"],"sourcesContent":["export const getAveragePlayTimePerPlayer = async () => {\n  const res = await fetch('http://localhost/dbms-practicum1/api/analytics/playtime.php?type=average');\n  const text = await res.text();\n  console.log(\"Average Playtime Raw:\", text);\n\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    throw new Error(\"Invalid JSON from average playtime\");\n  }\n};\n\nexport const getWeeklyPlayTimeByPlayer = async (startDate = '') => {\n  const url = new URL('http://localhost/dbms-practicum1/api/analytics/playtime.php');\n  url.searchParams.append('type', 'total');\n  if (startDate) {\n    url.searchParams.append('start', startDate);\n  }\n\n  const res = await fetch(url.toString());\n  const text = await res.text();\n  console.log(\"Weekly Playtime Raw:\", text);\n\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    throw new Error(\"Invalid JSON from weekly playtime\");\n  }\n};\n\n"],"mappings":"AAAA,OAAO,MAAMA,2BAA2B,GAAG,MAAAA,CAAA,KAAY;EACrD,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,0EAA0E,CAAC;EACnG,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,CAAC,CAAC;EAC7BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,IAAI,CAAC;EAE1C,IAAI;IACF,OAAOG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;EACzB,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;EACvD;AACF,CAAC;AAED,OAAO,MAAMC,yBAAyB,GAAG,MAAAA,CAAOC,SAAS,GAAG,EAAE,KAAK;EACjE,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAAC,6DAA6D,CAAC;EAClFD,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC;EACxC,IAAIJ,SAAS,EAAE;IACbC,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,OAAO,EAAEJ,SAAS,CAAC;EAC7C;EAEA,MAAMV,GAAG,GAAG,MAAMC,KAAK,CAACU,GAAG,CAACI,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAMb,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,CAAC,CAAC;EAC7BC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,IAAI,CAAC;EAEzC,IAAI;IACF,OAAOG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;EACzB,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;EACtD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}