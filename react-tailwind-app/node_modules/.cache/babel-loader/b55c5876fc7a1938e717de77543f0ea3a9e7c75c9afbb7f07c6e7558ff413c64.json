{"ast":null,"code":"var _jsxFileName = \"/Users/ziyixu/LocalDocuments/CS5200/Practicum1/react-tailwind-app/src/components/features/QueryViewer.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery } from '../../hooks/useQuery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QueryViewer = () => {\n  _s();\n  const {\n    data,\n    error,\n    isLoading\n  } = useQuery();\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Query Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-disc pl-5\",\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"mb-2\",\n        children: JSON.stringify(item)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_s(QueryViewer, \"vamb9feK/asxjJLX6wcKCD8DQJA=\", false, function () {\n  return [useQuery];\n});\n_c = QueryViewer;\nexport default QueryViewer;\nvar _c;\n$RefreshReg$(_c, \"QueryViewer\");","map":{"version":3,"names":["React","useQuery","jsxDEV","_jsxDEV","QueryViewer","_s","data","error","isLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","map","item","index","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/ziyixu/LocalDocuments/CS5200/Practicum1/react-tailwind-app/src/components/features/QueryViewer.jsx"],"sourcesContent":["import React from 'react';\nimport { useQuery } from '../../hooks/useQuery';\n\nconst QueryViewer = () => {\n    const { data, error, isLoading } = useQuery();\n\n    if (isLoading) return <div>Loading...</div>;\n    if (error) return <div>Error: {error.message}</div>;\n\n    return (\n        <div className=\"p-4\">\n            <h2 className=\"text-xl font-bold mb-4\">Query Results</h2>\n            <ul className=\"list-disc pl-5\">\n                {data.map((item, index) => (\n                    <li key={index} className=\"mb-2\">\n                        {JSON.stringify(item)}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default QueryViewer;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAE7C,IAAIO,SAAS,EAAE,oBAAOL,OAAA;IAAAM,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC3C,IAAIN,KAAK,EAAE,oBAAOJ,OAAA;IAAAM,QAAA,GAAK,SAAO,EAACF,KAAK,CAACO,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEnD,oBACIV,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAN,QAAA,gBAChBN,OAAA;MAAIY,SAAS,EAAC,wBAAwB;MAAAN,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzDV,OAAA;MAAIY,SAAS,EAAC,gBAAgB;MAAAN,QAAA,EACzBH,IAAI,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAClBf,OAAA;QAAgBY,SAAS,EAAC,MAAM;QAAAN,QAAA,EAC3BU,IAAI,CAACC,SAAS,CAACH,IAAI;MAAC,GADhBC,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACR,EAAA,CAlBID,WAAW;EAAA,QACsBH,QAAQ;AAAA;AAAAoB,EAAA,GADzCjB,WAAW;AAoBjB,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}