{"ast":null,"code":"export const getTotalAchievementsPerGame = async () => {\n  const res = await fetch('http://localhost/dbms-practicum1/api/analytics/achievements.php');\n  const text = await res.text();\n  console.log(\"Achievements Raw:\", text);\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    throw new Error(\"Invalid JSON from achievements\");\n  }\n};\nexport const getTopPlayersWithAchievements = async (limit = 5) => {\n  const res = await fetch(`http://localhost/dbms-practicum1/api/analytics/achievements.php?limit=${limit}`);\n  const text = await res.text(); // Handle raw response\n  console.log('Top Players Response:', text);\n  if (!res.ok) {\n    throw new Error('Failed to fetch top players with achievements');\n  }\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    console.error('Invalid JSON received:', err);\n    throw new Error('Invalid JSON received');\n  }\n};","map":{"version":3,"names":["getTotalAchievementsPerGame","res","fetch","text","console","log","JSON","parse","err","Error","getTopPlayersWithAchievements","limit","ok","error"],"sources":["/Users/ziyixu/LocalDocuments/CS5200/Practicum1/react-tailwind-app/src/services/achievementService.js"],"sourcesContent":["export const getTotalAchievementsPerGame = async () => {\n  const res = await fetch('http://localhost/dbms-practicum1/api/analytics/achievements.php');\n  const text = await res.text();\n  console.log(\"Achievements Raw:\", text);\n  \n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    throw new Error(\"Invalid JSON from achievements\");\n  }\n};\n\nexport const getTopPlayersWithAchievements = async (limit = 5) => {\n  const res = await fetch(`http://localhost/dbms-practicum1/api/analytics/achievements.php?limit=${limit}`);\n\n  const text = await res.text(); // Handle raw response\n  console.log('Top Players Response:', text);\n\n  if (!res.ok) {\n    throw new Error('Failed to fetch top players with achievements');\n  }\n\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    console.error('Invalid JSON received:', err);\n    throw new Error('Invalid JSON received');\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,2BAA2B,GAAG,MAAAA,CAAA,KAAY;EACrD,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iEAAiE,CAAC;EAC1F,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,CAAC,CAAC;EAC7BC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,IAAI,CAAC;EAEtC,IAAI;IACF,OAAOG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;EACzB,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;EACnD;AACF,CAAC;AAED,OAAO,MAAMC,6BAA6B,GAAG,MAAAA,CAAOC,KAAK,GAAG,CAAC,KAAK;EAChE,MAAMV,GAAG,GAAG,MAAMC,KAAK,CAAC,yEAAyES,KAAK,EAAE,CAAC;EAEzG,MAAMR,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;EAC/BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,IAAI,CAAC;EAE1C,IAAI,CAACF,GAAG,CAACW,EAAE,EAAE;IACX,MAAM,IAAIH,KAAK,CAAC,+CAA+C,CAAC;EAClE;EAEA,IAAI;IACF,OAAOH,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;EACzB,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZJ,OAAO,CAACS,KAAK,CAAC,wBAAwB,EAAEL,GAAG,CAAC;IAC5C,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}